plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.63-beta'
}

version = "3.10.1"
group = "dev.gigaherz.guidebook"

var minecraftVersionResolver = project.neoForge.version.map { "1." + (it =~ /^(\d+(?:\.[1-9]\d*|))\./)[0][1] }
base {
    archivesName = minecraftVersionResolver.map { "Guidebook-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

java.withSourcesJar()

repositories {
    maven {
        url 'https://dogforce-games.com/maven'
    }
    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        // game stages
        url 'https://maven.blamejared.com'
    }
    mavenLocal()
}

neoForge {
    version = "21.4.77-beta"

    runs {
        // applies to all the run configs below
        configureEach {
            gameDirectory = project.file('run')
            logLevel = org.slf4j.event.Level.DEBUG
        }

        client {
            client()
        }

        server {
            server()
        }
    }

    mods {
        thismod {
            sourceSet(sourceSets.main)
        }
    }

    parchment {
        minecraftVersion = "1.21.4"
        mappingsVersion = "2025.01.19"
    }
}

dependencies {
    //compileOnly ("mezz.jei:jei-1.20-common-api:14.0.0.4")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.20-common:14.0.0.4")
    //compileOnly ("mezz.jei:jei-1.20-forge-api:14.0.0.4")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.20-forge:14.0.0.4")

    /*
    compileOnly fg.deobf( "net.darkhax.gamestages:GameStages-Forge-1.19.2:11.0.2")
    compileOnly fg.deobf( "net.darkhax.bookshelf:Bookshelf-Forge-1.19.2:16.1.4")
     */
}

tasks.named("jar") {
    from(files('LICENSE.txt'))

    manifest {
        attributes([
                "Specification-Title": "guidebook",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": "guidebook",
                "Implementation-Version": project.version,
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Maven-Artifact":"${project.group}:${project.base.archivesName}:${project.version}"
        ])
    }
}

tasks.named('sourcesJar') {
    from(files('LICENSE.txt'))
}

project.afterEvaluate {
    publish.dependsOn('build')
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.archivesBaseName
                from components.java
            }
        }

        repositories {
            if (findProperty("RELEASE") && System.env.giga_maven_host != null) {
                System.out.println("Remote publish enabled on " + System.env.giga_maven_host)
                maven {
                    url System.env.giga_maven_host
                    credentials {
                        username System.env.giga_maven_user
                        password System.env.giga_maven_password
                    }
                }
            }
            else {
                System.out.println("Remote publish disabled.")
                maven {
                    url "$projectDir/../CommonMaven"
                }
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
